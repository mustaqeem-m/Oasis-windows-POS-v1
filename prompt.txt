When the user clicks the “Add Expense” button located in the topBar, open a modal window titled “Add Expense”. This modal must exactly follow the structure and layout shown below, and every dropdown and field must use dynamic live data from the app's current expense context — no static data is allowed.

🧾 Form Fields & Behavior (Top to Bottom, Left to Right):
1. Business Location*
Dropdown

Must fetch and list all business locations (e.g., Oasis Garments (BL0006))

2. Expense Category*
Dropdown

Must fetch expense categories dynamically

3. Sub Category
Dropdown

Depends on selected Expense Category

4. Reference No
Input field (text)

Leave empty to auto-generate

5. Date*
Date-time picker

Default to current timestamp

6. Expense for
Dropdown

Dynamic list of employees/users/suppliers the expense is made for

7. Applicable Tax
Dropdown

Dynamic list of tax rules defined in system

8. Total Amount*
Input field (number)

9. Expense Note
Multiline text area for writing a description or purpose

💳 Add Payment Section:
10. Amount*
Input field for amount being paid

11. Paid On*
Date-time picker (default to current time)

12. Payment Method*
Dropdown

Options: Cash, Card, Bank Transfer, etc. — all fetched from system settings

13. Payment Account
Dropdown

Dynamically load available payment accounts

14. Payment Note
Multiline input for internal notes about the payment

📌 Additional Details:
“Payment Due” should reflect Total Amount - Paid Amount (auto-calculated)

Modal must have two buttons at the bottom:

Save (Primary, purple)

Close (Secondary, dark)

Everything must be wrapped in a clean, responsive modal layout with proper field spacing, and values should update/react based on selected inputs (e.g., category → subcategory).
Use validation for required fields marked with asterisk (*).

